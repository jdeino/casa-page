{"ast":null,"code":"var _jsxFileName = \"/Users/joshdeino/Desktop/home-page/src/components/feed.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './feed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feed() {\n  _s();\n  // State for managing comments\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n\n  // Function to handle comment submission\n  const handleCommentSubmit = () => {\n    if (comment.trim() === '') {\n      return; // Don't add empty comments\n    }\n\n    setComments([...comments, comment]);\n    setComment(''); // Clear the input field after submission\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-feed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a comment...\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCommentSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        children: comment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(Feed, \"ArDy/OMNcGEzAzrAQrybS7se1Ys=\");\n_c = Feed;\nexport default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Feed","_s","comments","setComments","comment","setComment","handleCommentSubmit","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/joshdeino/Desktop/home-page/src/components/feed.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './feed.css';\n\nfunction Feed() {\n  // State for managing comments\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n\n  // Function to handle comment submission\n  const handleCommentSubmit = () => {\n    if (comment.trim() === '') {\n      return; // Don't add empty comments\n    }\n\n    setComments([...comments, comment]);\n    setComment(''); // Clear the input field after submission\n  };\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed-content\">\n        {/* Scrollable box content */}\n        <div className=\"scroll-feed\">\n          {/* Add more scroll items as needed */}\n        </div>\n      </div>\n      {/* Comment section */}\n      <div className=\"comment-section\">\n        <input\n          type=\"text\"\n          placeholder=\"Add a comment...\"\n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n        />\n        <button onClick={handleCommentSubmit}>Submit</button>\n        {/* Display existing comments */}\n        {comments.map((comment, index) => (\n          <div key={index} className=\"comment\">\n            {comment}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Feed;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMS,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzB,OAAO,CAAC;IACV;;IAEAJ,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEE,OAAO,CAAC,CAAC;IACnCC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC;;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBV,OAAA;MAAKS,SAAS,EAAC,cAAc;MAAAC,QAAA,eAE3BV,OAAA;QAAKS,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEvB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENd,OAAA;MAAKS,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BV,OAAA;QACEe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAEZ,OAAQ;QACfa,QAAQ,EAAGC,CAAC,IAAKb,UAAU,CAACa,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFd,OAAA;QAAQqB,OAAO,EAAEd,mBAAoB;QAAAG,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAEpDX,QAAQ,CAACmB,GAAG,CAAC,CAACjB,OAAO,EAAEkB,KAAK,kBAC3BvB,OAAA;QAAiBS,SAAS,EAAC,SAAS;QAAAC,QAAA,EACjCL;MAAO,GADAkB,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CAzCQD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA2Cb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}